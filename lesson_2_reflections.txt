When you create arepository git vreates a hidden file that contains all the metadata about your repository.It does not reate initial commit for you sou you have to do it  yourself. Not all files need to be added to commit- you can pick what to add.

Staging area contains all the files you are going to commit next time. It is a narrower concept compared to working directory that may contain other files you do not intend to make a part of your repository. Repository is between those two in terms of width of the concept.

Only add the files necessary to staging area before commit to make sure each cnahge is logically a single unit.

Branches are useful to keep separate versions of the code, like temporary localization or trying new feature

Diagrams are super helpful to visualise the structure of the branch structures. You could use git log with --graph key to show it as a tree, and also use --oneline key to format output to single line per commit

Merging two branches takes changes made in both branches and adds both of them to the final commit. The merged version gets a branch name of the branch checked out right before the merge. You may want to delete the unnecessary label from the commit of the branch that was merged into the cheched out branch. To do so use git branch -d branch_label_to_delete_name